@use "/src/styles/mixins/responsive" as *;

$button-size-m: 56px;
$button-size-s: 40px;
$button-size-m-width: 175px;
$button-size-s-width: 120px;
$button-border: 2px;
$button-icon-size: 30px;
$button-icon-size-s: 20px;
$shift-1: 3px;
$shift-2: 10px;
$shift-3: 15px;

.ui-button {
  height: $button-size-s;
  width: $button-size-s-width;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-1);
  flex-shrink: 0;
  position: relative;
  padding: var(--space-0-5) var(--space-1);
  border: none;
  outline-color: transparent;
  transition: all 0.2s;
  text-align: start;
  user-select: none;
  font-size: var(--fs-300);
  cursor: pointer;

  @include responsive("medium") {
    height: $button-size-m;
    width: $button-size-m-width;
    padding: var(--space-1) var(--space-3);
  }

  svg {
    width: $button-icon-size-s;
    height: $button-icon-size-s;

    @include responsive("medium") {
      width: $button-icon-size;
      height: $button-icon-size;
    }
  }

  /** variants */
  &.background {
    color: var(--color-secondary-dark);
    background-color: var(--color-white);

    &:hover {
      background-color: var(--color-primary);
      color: var(--color-white);
    }

    &:active {
      background-color: var(--color-secondary);
      color: var(--color-white);
    }
  }

  &.outlined {
    color: var(--color-text-primary);
    background-color: var(--color-white);

    &::before {
      content: "";
      position: absolute;
      bottom: $button-border;
      left: $button-border;
      width: calc(100% - calc($button-border * 2));
      height: calc(100% - calc($button-border * 2));
      background-color: var(--color-secondary);
      z-index: -1;
      transition: all 0.2s;
    }

    &:hover {
      &::before {
        background-color: var(--color-secondary-dark);
      }
    }

    &:active {
      &::before {
        background-color: var(--color-accent);
      }
    }
  }

  &.clear {
    color: var(--color-white);
    width: auto;
    height: auto;
    background-color: transparent;
  }

  &,
  &::before {
    clip-path: polygon(
      calc(0% + #{$shift-1}) 0%,
      calc(100% - #{$shift-1}) 0%,
      calc(100% - #{$shift-1}) calc(50% - #{$shift-3}),
      100% calc(50% - #{$shift-2}),
      100% calc(50% + #{$shift-2}),
      calc(100% - #{$shift-1}) calc(50% + #{$shift-3}),
      calc(100% - #{$shift-1}) 100%,
      calc(0% + #{$shift-1}) 100%,
      calc(0% + #{$shift-1}) calc(50% + #{$shift-3}),
      0% calc(50% + #{$shift-2}),
      0% calc(50% - #{$shift-2}),
      calc(0% + #{$shift-1}) calc(50% - #{$shift-3})
    );
  }

  &.right,
  &.right::before {
    clip-path: polygon(
      0% 0%,
      calc(100% - #{$shift-1}) 0%,
      calc(100% - #{$shift-1}) calc(50% - #{$shift-3}),
      100% calc(50% - #{$shift-2}),
      100% calc(50% + #{$shift-2}),
      calc(100% - #{$shift-1}) calc(50% + #{$shift-3}),
      calc(100% - #{$shift-1}) 100%,
      0% 100%,
      0% calc(50% + #{$shift-3}),
      calc(0% + #{$shift-1}) calc(50% + #{$shift-2}),
      calc(0% + #{$shift-1}) calc(50% - #{$shift-2}),
      0% calc(50% - #{$shift-3})
    );
  }

  &.round {
    padding: 0;
    width: $button-size-s;
    border-radius: 50%;
    clip-path: none;

    @include responsive("medium") {
      width: $button-size-m;
    }
  }
}
